package com.creatifcubed.minecraft.mc_chatroom;

import _root_.cpw.mods.fml.common.{ Mod, SidedProxy, FMLLog };
import _root_.cpw.mods.fml.common.Mod.{ Instance, EventHandler };
import _root_.cpw.mods.fml.common.event.{ FMLPreInitializationEvent, FMLInitializationEvent, FMLPostInitializationEvent
  , FMLServerStartingEvent, FMLServerStoppingEvent };
import _root_.cpw.mods.fml.common.network.NetworkMod;
import _root_.cpw.mods.fml.relauncher.{ SideOnly, Side };

import java.util.logging.Logger;
import java.util.Arrays;

import com.creatifcubed.minecraft.mc_chatroom.network.{ PacketFactory, MCChatroomCommand };
import com.creatifcubed.minecraft.mc_chatroom.models.AudioSource;

@Mod(modid=MCChatroom.MOD_ID, name=MCChatroom.MOD_NAME, version=MCChatroom.MOD_VERSION, modLanguage="scala")
@NetworkMod(clientSideRequired=false
  , serverSideRequired=false
  , channels=Array(MCChatroom.MOD_NETWORKCHANNEL_A)
  , packetHandler=classOf[PacketHandler]
  )
object MCChatroom {
  final val MOD_ID = "mc_chatroom";
  final val MOD_NAME = "Minecraft Chatroom";
  final val MOD_VERSION = "0.1.0";
  final val MOD_AUTHORS = Array("Raekye");
  final val MOD_DESCRIPTION = "In game audio chat for Minecraft.";
  final val MOD_URL = "http://mcchatroom.creatifcubed.com";
  final val MOD_CREDITS = "Hmmmm.";

  final val MOD_SHORTNAME = "MC Chatroom";
  final val MOD_PROXY_CLIENT = "com.creatifcubed.minecraft.mc_chatroom.ClientProxy";
  final val MOD_PROXY_COMMON = "com.creatifcubed.minecraft.mc_chatroom.CommonProxy";

  final val MOD_NETWORKCHANNEL_A = "a";

  final val log = Logger.getLogger(MOD_SHORTNAME);
  final val packetFactory = new PacketFactory();

  @SidedProxy(clientSide=MOD_PROXY_CLIENT, serverSide=MOD_PROXY_COMMON)
  var proxy: CommonProxy = null;
  
  @SideOnly(Side.CLIENT)
  val microphone: AudioSource = new AudioSource();

  @EventHandler
  def preInit(e: FMLPreInitializationEvent): Unit = {
    log.setParent(FMLLog.getLogger());
    e.getModMetadata().autogenerated = false;
    e.getModMetadata().modId = MOD_ID;
    e.getModMetadata().name = MOD_NAME;
    e.getModMetadata().authorList = Arrays.asList(MOD_AUTHORS: _*);
    e.getModMetadata().description = MOD_DESCRIPTION;
    e.getModMetadata().url = MOD_URL;
    e.getModMetadata().credits = MOD_CREDITS;
  }

  @EventHandler
  def init(e: FMLInitializationEvent): Unit = {
    this.proxy.registerRegistries();
  }
  
  @EventHandler
  def postInit(e: FMLPostInitializationEvent): Unit = {
    return;
    }

  @EventHandler
  def serverStarting(e: FMLServerStartingEvent): Unit = {
    e.registerServerCommand(new MCChatroomCommand());
  }

  @EventHandler
  def serverStoppingEvent(e: FMLServerStoppingEvent): Unit = {
    return;
  }
}